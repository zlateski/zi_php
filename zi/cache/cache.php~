<?php

//
// Copyright (C) 2011  Aleksandar Zlateski <zlateski@mit.edu>
// ----------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//

class cache
{
    private static $initialized = false;
    private static $connected   = false;
    private static $mmc         = false;

    private static function connect()
    {
        if ( !self::$initialized )
        {
            self::$mmc  = new Memcached();
            self::$mmc->setOption( Memcached::OPT_SOCKET_RECV_SIZE, 1024*1024 );
            self::$mmc->setOption( Memcached::OPT_SOCKET_SEND_SIZE, 1024*1024 );

            // self::$mmc->setOption( Memcached::OPT_NO_BLOCK, true );
            // self::$mmc->setOption( Memcached::OPT_TCP_NODELAY, true );
            // self::$mmc->setOption( Memcached::OPT_HASH, Memcached::HASH_MURMUR );
            // self::$mmc->setOption( Memcached::OPT_SERIALIZER, Memcached::SERIALIZER_JSON );

            self::$connected = self::$mmc->addServer( self::server_address, self::server_port );
            self::$initialized = true;
        }
        return self::$connected;
    }


}
